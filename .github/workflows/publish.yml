name: Check Upstream Release and Publish

on:
  schedule:
    - cron: '0 * * * *' # 每小时执行一次
  workflow_dispatch: # 支持手动触发

jobs:
  check-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install pnpm globally
        run: |
          npm install -g pnpm@8
          pnpm --version  # 确认 pnpm 安装成功

      - name: Install dependencies
        run: pnpm install

      - name: Setup .npmrc for publish
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Get latest upstream release
        id: get_release
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/lich0821/WeChatFerry/releases/latest | jq -r .tag_name)
          echo "latest_release=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Read local version
        id: get_local_version
        run: |
          LOCAL_VERSION=$(jq -r .version packages/core/src/version.json)
          echo "local_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare
        run: |
          if [ "${{ steps.get_release.outputs.latest_release }}" != "${{ steps.get_local_version.outputs.local_version }}" ]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no new version
        if: steps.compare.outputs.new_version == 'false'
        run: echo "No new version detected. Skipping publish."

      - name: Update version.json
        if: steps.compare.outputs.new_version == 'true'
        run: |
          jq --arg ver "${{ steps.get_release.outputs.latest_release }}" '.version = $ver' packages/core/src/version.json > tmp.json && mv tmp.json packages/core/src/version.json

      - name: Core package build & publish
        if: steps.compare.outputs.new_version == 'true'
        run: |
          cd packages/core
          pnpm run get-wcf
          pnpm run build-proto
          pnpm version patch
          git add .
          pnpm publish --access public

      - name: CLI package build & publish
        if: steps.compare.outputs.new_version == 'true'
        run: |
          cd packages/cli
          pnpm version patch
          git add .
          pnpm run build
          pnpm publish --access public

      - name: Commit and push changes
        if: steps.compare.outputs.new_version == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore: update version to ${{ steps.get_release.outputs.latest_release }}"
          git push
